[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "pyhgtmap"
dynamic = ["version"]
description = "Creates OpenStreetMap suitable contour lines from NASA SRTM data"
readme = "README.md"
license = "GPL-2.0-or-later"
authors = [
    { name = "Adrian Dempwolff", email = "phyghtmap@aldw.de" },
    { name = "AurÃ©lien Grenotton", email = "agrenott@gmail.com" },
]
dependencies = [
    "bs4>=0.0.1",
    "colorlog>=6.7.0",
    "contourpy>=1.0.7",
    # Do NOT pin GDAL version to ease installing it via OS package manager (due to many dependencies)
    "GDAL",
    "matplotlib>=3.4.3",
    "numpy>=1.24.2",
    "osmium>=3.6.0",
    "pybind11-rdp>=0.1.3",
    "scipy>=1.8.0",
    "shapely>=2.0.1",
]

[project.scripts]
pyhgtmap = "pyhgtmap.main:main"

[project.urls]
repository = "https://github.com/agrenott/pyhgtmap"

[tool.hatch.version]
path = "pyhgtmap/__init__.py"

[tool.hatch.build.targets.sdist]
include = ["/pyhgtmap"]


[tool.hatch.envs.default]
# Use default env for all dev activities
dependencies = [
  "pytest~=7.2.1",
  "pytest-mpl~=0.16.1",
  "types-beautifulsoup4>=4",
  "coverage~=7.2.1",
  "black>=23.1.0",
  "mypy>=1.0.1",
  "mypy-extensions~=1.0.0",
  "ruff>=0.0.259",
]

# To allow using system's GDAL, which is painful to install
system-packages = true

[tool.hatch.envs.default.scripts]
all = ["style", "typing", "test_cov"]
fmt = [
  "black {args:pyhgtmap tests tools}",
  "ruff --fix {args:.}",
  "style",
]
style = [
  "ruff {args:.}",
  "black --check --diff {args:pyhgtmap tests tools}",
]
test = "pytest {args}"
test_cov = [
  "coverage run -m pytest --mpl",
  "coverage combine",
  "coverage report",
  "coverage xml",
]
typing = "mypy {args}"

[[tool.hatch.envs.test.matrix]]
python = ["3.9", "3.10"]

[tool.black]

[tool.isort]
atomic = true
profile = "black"
line_length = 88
skip_gitignore = true
known_first_party = ["pyhgtmap"]

[tool.mypy]
plugins = "numpy.typing.mypy_plugin"
ignore_missing_imports = true
files = ["tests", "pyhgtmap", "tools"]
install_types = true
non_interactive = true
